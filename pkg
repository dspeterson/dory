#!/bin/bash

# -----------------------------------------------------------------------------
# Copyright 2014 if(we)
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#   http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
# -----------------------------------------------------------------------------

usage() {
    echo Usage: `basename $0` '[--debug] [--asan (yes|no)] [tar|rpm|rpm_noconfig]' 1>&2
    echo 1>&2
    echo 'Option --asan is ignored if --debug is not specified.'
    exit 1
}

make_tar() {
    echo ------------------------------------------------------------
    echo Building tar archive
    echo
    dbg=$1

    # The contents of the tarball are exactly the same regardless of whether we
    # call it 'dory' or 'dory_debug'.  The only reason for the name difference
    # is to make building the 'dory_debug' RPM package a bit easier.
    if [ $dbg -eq 0 ]; then
        pkg_base_name=dory
    else
        pkg_base_name=dory_debug
    fi

    pkg_name=${pkg_base_name}-${version}
    rm -fr out/pkg/tar
    mkdir -p out/pkg/tar/${pkg_name}

    for f in `ls | grep -v out`; do
        cp -a $f out/pkg/tar/${pkg_name}
    done

    cp .gitignore out/pkg/tar/${pkg_name}
    src/dory/scripts/gen_version -q > out/pkg/tar/${pkg_name}/version.txt

    if [ "$?" -ne 0 ]; then
        echo Failed to generate version.txt 1>&2
        exit 1
    fi

    cwd=`pwd`
    cd out/pkg/tar
    tar cf ${pkg_name}.tar ${pkg_name}
    gzip --best ${pkg_name}.tar
    rm -fr ${pkg_name}
    cd $cwd
    echo ------------------------------------------------------------
}

make_rpm() {
    echo ------------------------------------------------------------
    echo Building RPM package
    echo
    cwd=`pwd`
    dbg=$1
    asan=$2

    if [ $dbg -eq 0 ]; then
        pkg_subdir=release
        pkg_name=dory
    else
        pkg_subdir=debug
        pkg_name=dory_debug
    fi

    if [ "$target" == "rpm_noconfig" ]; then
        rpm_dir=out/pkg/${pkg_subdir}/rpm_noconfig
        spec_in=rpm_specs/dory_noconfig.spec.in
    else
        rpm_dir=out/pkg/${pkg_subdir}/rpm
        spec_in=rpm_specs/dory.spec.in
    fi

    rm -fr $rpm_dir
    base=${rpm_dir}/build
    mkdir -p $base/BUILD
    mkdir -p $base/BUILDROOT
    mkdir -p $base/RPMS
    mkdir -p $base/SOURCES
    mkdir -p $base/SPECS
    mkdir -p $base/SRPMS

    if [ $dbg -eq 0 ]; then
        sed "s/DORY_VERSION/${version}/" < $spec_in | \
                sed 's/BUILD_TYPE/release/' | \
                sed 's/DORY_PKG_NAME/dory/' | \
                sed 's/SANITIZE_ADDRESS/no/' > $base/SPECS/dory.spec
    else
        sed "s/DORY_VERSION/${version}/" < $spec_in | \
                sed 's/BUILD_TYPE/debug/' | \
                sed 's/DORY_PKG_NAME/dory_debug/' | \
                sed "s/SANITIZE_ADDRESS/${asan}/" > $base/SPECS/dory.spec
    fi

    cp out/pkg/tar/${pkg_name}-${version}.tar.gz $base/SOURCES
    cd $base
    rpmbuild --define "_topdir `pwd`" -ba SPECS/dory.spec

    if [ "$?" -ne 0 ]; then
        echo RPM build failed 1>&2
        exit 1
    fi

    for f in `find RPMS -type f`; do
        mv $f ..
    done

    for f in `find SRPMS -type f`; do
        mv $f ..
    done

    cd $cwd
    rm -fr $base
    echo ------------------------------------------------------------
}

debug=0
asan=yes
target=

while [ $# -gt 0 ]; do
    key="$1"

    case $key in
        --debug)
            if [ ! -z "$target" ]; then
                usage
            fi

            debug=1
            ;;
        --asan)
            if [ ! -z "$target" ]; then
                usage
            fi

            if [ "$2" == "yes" ] || [ "$2" == "no" ]; then
                asan=$2
            else
                usage
            fi

            shift
            ;;
        *)
            if [ "$key" == "tar" ] || [ "$key" == "rpm" ] || \
                    [ "$key" == "rpm_noconfig" ]; then
                target=$key
            else
                usage
            fi
            ;;
    esac

    shift
done

if [ -z "$target" ]; then
    usage
fi

if [ "$debug" -eq 0 ]; then
    asan=no
fi

if [ ! -f "SConstruct" ] || [ ! -d "src" ]; then
    echo This script must be executed from the root of the tree 1>&2
    exit 1
fi

version=`src/dory/scripts/gen_version -q`
echo Software version is $version
echo

# Always make a tarball, since that is required for building an RPM package.
make_tar $debug

if [ "$target" == "rpm" ] || [ "$target" == "rpm_noconfig" ]; then
    make_rpm $debug $asan
fi
